---
import LinkButton from "./LinkButton.astro";

import GithubRoundedIcon from "./icons/GithubRounded.astro";
import LinkIcon from "./icons/Link.astro";


interface Tag {
  name: string;
  class: string;
  icon: any;
}

interface Props {
  title: string;
  tags: Tag[];
  description: string;
  image: string;
  repo?: string;
  demo?: string;
}
const { image, title, description, repo, demo, tags } = Astro.props;
---
<article class="group border border-gray-600/30 hover:border-gray-700/30 transition-all duration-300 w-full max-w-6xl mb-5 mx-auto flex flex-col lg:flex-row gap-6 bg-white/20 dark:bg-gray-900/20 rounded-xl shadow-lg overflow-hidden p-4 sm:p-6">
  <div class="w-full lg:w-1/2">
    <img
      src={image}
      alt={title}
      class="w-full h-full object-cover rounded-lg group-hover:scale-99 transition-all duration-300"
    />
  </div>

  <div class="w-full lg:w-1/2 flex flex-col justify-center gap-4">
    <h2 class="text-3xl font-bold text-gray-800 dark:text-white">{title}</h2>
    <div class="flex flex-wrap gap-2">
      {tags.map(tag => (
        <span class={`flex items-center gap-1 px-3 py-1 rounded-full text-xs font-medium ${tag.class}`}>
          <tag.icon class="w-4 h-4" />
          {tag.name}
        </span>
      ))}
    </div>
    <p class="text-pretty text-gray-800 dark:text-white">{description}</p>

    <footer class="flex flex-wrap gap-2 mt-4">

      {repo ? <LinkButton textColor="" href={repo}><GithubRoundedIcon class="mr-2.5 size-4"/>CÃ³digo</LinkButton> : ""}
      {demo ? <LinkButton textColor="" href={demo}><LinkIcon class="mr-2.5 size-4"/>Preview</LinkButton> : ""}


    </footer>
  </div>
</article>

